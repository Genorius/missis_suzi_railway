import requests

API_KEY = "pDUAhKJaZZlSXnWtSberXS6PCwfiGP4D"
CRM_URL = "https://valentinkalinovski.retailcrm.ru"


def get_order_by_bot_code_or_phone(code):
    url = f"{CRM_URL}/api/v5/orders"
    headers = {"X-API-KEY": API_KEY}

    # –ü–æ–∏—Å–∫ –ø–æ bot_code
    params_code = {
        "customFields[bot_code]": code,
        "limit": 1,
        "apiKey": API_KEY
    }
    r1 = requests.get(url, params=params_code, headers=headers)
    if r1.ok and r1.json().get("orders"):
        order = r1.json()["orders"][0]
        return {"id": order["id"], "number": order["number"]}

    # –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    params_phone = {
        "customer[phone]": code,
        "limit": 1,
        "apiKey": API_KEY
    }
    r2 = requests.get(url, params=params_phone, headers=headers)
    if r2.ok and r2.json().get("orders"):
        order = r2.json()["orders"][0]
        return {"id": order["id"], "number": order["number"]}

    return None


def get_status_text(order_id):
    url = f"{CRM_URL}/api/v5/orders/{order_id}"
    headers = {"X-API-KEY": API_KEY}
    r = requests.get(url, headers=headers)
    if r.ok:
        order = r.json().get("order", {})
        items = order.get("items", [])
        product_list = "\n".join([f"‚Ä¢ {item['offer']['name']}" for item in items]) or "‚Äî"
        status = order.get("statusComment") or "–°—Ç–∞—Ç—É—Å —É—Ç–æ—á–Ω—è–µ—Ç—Å—è"
        return f"üì¶ –í–∞—à –∑–∞–∫–∞–∑:\n{product_list}\n\n–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {status}"
    return "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."


def get_track_text(order_id):
    url = f"{CRM_URL}/api/v5/orders/{order_id}"
    headers = {"X-API-KEY": API_KEY}
    r = requests.get(url, headers=headers)
    if r.ok:
        order = r.json().get("order", {})
        track = order.get("delivery", {}).get("number")
        if track:
            return (
                f"üöö –¢—Ä–µ–∫-–Ω–æ–º–µ—Ä: {track}\n"
                f"–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–∂–Ω–æ —Ç—É—Ç: https://www.cdek.ru/tracking?order_id={track}"
            )
        else:
            return "üì≠ –ü–æ–∫–∞ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä –µ—â—ë –Ω–µ –ø—Ä–∏—Å–≤–æ–µ–Ω ‚Äî –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω –ø–æ—è–≤–∏—Ç—Å—è, —è —Å—Ä–∞–∑—É —Ä–∞—Å—Å–∫–∞–∂—É!"
    return "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."


def get_orders(active=True):
    url = f"{CRM_URL}/api/v5/orders"
    headers = {"X-API-KEY": API_KEY}
    status_exclude = ["complete", "cancelled"] if active else ["new", "assembling", "sent"]
    r = requests.get(url, headers=headers)
    if r.ok:
        orders = r.json().get("orders", [])
        result = []
        for o in orders:
            if active and o["status"] in status_exclude:
                continue
            if not active and o["status"] not in status_exclude:
                continue
            result.append(f"‚Ä¢ –ó–∞–∫–∞–∑ {o['number']} –æ—Ç {o['createdAt'][:10]} ‚Äî {o['statusComment'] or '–±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}")
        if result:
            return "\n".join(result)
        return "üì¶ –ü–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤. –Ø –≤—Å—ë –ø—Ä–æ–≤–µ—Ä–∏–ª–∞ ü§ç" if active else "üì¶ –ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤—è—Ç—Å—è ‚Äî —Ä–∞—Å—Å–∫–∞–∂—É ‚ú®"
    return "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤."


def save_review_to_crm(order_id, comment):
    url = f"{CRM_URL}/api/v5/orders/{order_id}/edit"
    headers = {"X-API-KEY": API_KEY}
    payload = {
        "order": {
            "customFields": {
                "comments": comment
            }
        },
        "site": "missis-suzi"
    }
    requests.post(url, headers=headers, json=payload)
